{"ast":null,"code":"var _jsxFileName = \"/Users/xrayaguilar/Desktop/gt-online-class/my-hwk-activities/User-Directory/src/App.js\";\nimport React from \"react\";\nimport EmployeeSearch from './components/EmployeeSearch';\nimport EmployeeTable from './components/EmployeeTable';\nimport Jumbotron from './components/Jumbotron';\nimport Wrapper from './components/Wrapper';\nimport API from './utils/API';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      original_data: []\n    };\n\n    this.handleSearch = value => {\n      if (value) value = value.toLowerCase();\n      this.setState({\n        list: this.state.original_data.filter(x => x.first_name.toLowerCase().includes(value) || x.last_name.toLowerCase().includes(value) || x.email.toLowerCase().includes(value) || x.dob.toLowerCase().includes(value))\n      }); // another way to do the above\n      // this.setState({\n      //   list: this.state.original_data.filter(x =>\n      //     Object.values(x).map(x => x.toLowerCase()).some(x => x.includes(value))\n      //   )\n      // })\n    };\n  }\n\n  componentDidMount() {\n    API.retrievePeople().then(results => {\n      const people = results.data.results.map(x => ({\n        first_name: x.name.first,\n        last_name: x.name.last,\n        email: x.email,\n        dob: x.dob.date,\n        img: x.picture.thumbnail\n      }));\n      this.setState({\n        list: people,\n        original_data: people\n      });\n    }).catch(err => console.warn(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, \"Employee Directory\"), /*#__PURE__*/React.createElement(EmployeeSearch, {\n      handleSearch: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(EmployeeTable, {\n      list: this.state.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/xrayaguilar/Desktop/gt-online-class/my-hwk-activities/User-Directory/src/App.js"],"names":["React","EmployeeSearch","EmployeeTable","Jumbotron","Wrapper","API","App","Component","state","list","original_data","handleSearch","value","toLowerCase","setState","filter","x","first_name","includes","last_name","email","dob","componentDidMount","retrievePeople","then","results","people","data","map","name","first","last","date","img","picture","thumbnail","catch","err","console","warn","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,aAAa,EAAE;AAFT,KADwB;;AAAA,SAuBhCC,YAvBgC,GAuBjBC,KAAK,IAAI;AACtB,UAAIA,KAAJ,EACEA,KAAK,GAAGA,KAAK,CAACC,WAAN,EAAR;AAEF,WAAKC,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,aAAX,CAAyBK,MAAzB,CAAgCC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaJ,WAAb,GAA2BK,QAA3B,CAAoCN,KAApC,KACzCI,CAAC,CAACG,SAAF,CAAYN,WAAZ,GAA0BK,QAA1B,CAAmCN,KAAnC,CADyC,IAEzCI,CAAC,CAACI,KAAF,CAAQP,WAAR,GAAsBK,QAAtB,CAA+BN,KAA/B,CAFyC,IAGzCI,CAAC,CAACK,GAAF,CAAMR,WAAN,GAAoBK,QAApB,CAA6BN,KAA7B,CAHI;AADM,OAAd,EAJsB,CAUtB;AACA;AACA;AACA;AACA;AACA;AACD,KAvC+B;AAAA;;AAMhCU,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,GAAG,CAACkB,cAAJ,GACGC,IADH,CACQC,OAAO,IAAI;AAEf,YAAMC,MAAM,GAAGD,OAAO,CAACE,IAAR,CAAaF,OAAb,CAAqBG,GAArB,CAAyBZ,CAAC,KAAK;AAC5CC,QAAAA,UAAU,EAAED,CAAC,CAACa,IAAF,CAAOC,KADyB;AAE5CX,QAAAA,SAAS,EAAEH,CAAC,CAACa,IAAF,CAAOE,IAF0B;AAG5CX,QAAAA,KAAK,EAAEJ,CAAC,CAACI,KAHmC;AAI5CC,QAAAA,GAAG,EAAEL,CAAC,CAACK,GAAF,CAAMW,IAJiC;AAK5CC,QAAAA,GAAG,EAAEjB,CAAC,CAACkB,OAAF,CAAUC;AAL6B,OAAL,CAA1B,CAAf;AAQA,WAAKrB,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEiB,MAAR;AAAgBhB,QAAAA,aAAa,EAAEgB;AAA/B,OAAd;AACD,KAZH,EAaGU,KAbH,CAaSC,GAAG,IAAIC,OAAO,CAACC,IAAR,CAAaF,GAAb,CAbhB;AAcD;;AAoBDG,EAAAA,MAAM,GAAG;AACP,wBAAO,uDACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAE,KAAK7B,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,eAKE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADO,CAAP;AASD;;AAnD+B;;AAsDlC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport EmployeeSearch from './components/EmployeeSearch';\nimport EmployeeTable from './components/EmployeeTable';\nimport Jumbotron from './components/Jumbotron';\nimport Wrapper from './components/Wrapper';\nimport API from './utils/API';\n\n\nclass App extends React.Component {\n  state = {\n    list: [],\n    original_data: []\n  }\n\n  componentDidMount() {\n    API.retrievePeople()\n      .then(results => {\n\n        const people = results.data.results.map(x => ({\n          first_name: x.name.first,\n          last_name: x.name.last,\n          email: x.email,\n          dob: x.dob.date,\n          img: x.picture.thumbnail\n        }))\n\n        this.setState({ list: people, original_data: people })\n      })\n      .catch(err => console.warn(err))\n  }\n\n  handleSearch = value => {\n    if (value)\n      value = value.toLowerCase()\n\n    this.setState({\n      list: this.state.original_data.filter(x => x.first_name.toLowerCase().includes(value) ||\n        x.last_name.toLowerCase().includes(value) ||\n        x.email.toLowerCase().includes(value) ||\n        x.dob.toLowerCase().includes(value))\n    })\n    // another way to do the above\n    // this.setState({\n    //   list: this.state.original_data.filter(x =>\n    //     Object.values(x).map(x => x.toLowerCase()).some(x => x.includes(value))\n    //   )\n    // })\n  }\n\n  render() {\n    return <>\n    <Wrapper>\n    <Jumbotron>\n      <h1 className=\"display-4\">Employee Directory</h1>\n      <EmployeeSearch handleSearch={this.handleSearch} />\n    </Jumbotron>\n      <EmployeeTable list={this.state.list} />\n      </Wrapper>\n    </>\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}